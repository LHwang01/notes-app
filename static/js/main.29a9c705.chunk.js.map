{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","class","trim","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","mode","setMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLocaleLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a9c705.chunk.js","sourcesContent":["import {MdDeleteForever} from 'react-icons/md'\r\n\r\nconst Note = ({ id, text, date, handleDeleteNote}) => {\r\n    return(\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever onClick={() => handleDeleteNote(id)} className = \"delete-icon\" size=\"1.3em\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;\r\n","import {useState} from 'react';\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n    const [noteText, setNoteText] = useState('');\r\n    const characterLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        if (characterLimit - event.target.value.length >= 0) {\r\n            setNoteText(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if(noteText.trim().length > 0) {\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n    }\r\n\r\n    return (<div className=\"note new\">\r\n        <textarea\r\n            rows=\"8\" \r\n            cols=\"10\" \r\n            placeholder=\"Enter your note\"\r\n            value={noteText}\r\n            onChange={handleChange}\r\n        ></textarea>\r\n        <div className=\"note-footer\">\r\n            <small>{characterLimit - noteText.length} Remaining</small>\r\n            <button class=\"save\" onClick={handleSaveClick}>Save</button>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default AddNote;\r\n","import Note from \"./Note\"\r\nimport AddNote from \"./AddNote\"\r\n\r\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\r\n    return(\r\n        <div className=\"notes-list\">\r\n            {notes.map((note) => (\r\n                <Note\r\n                    id={note.id} \r\n                    text={note.text} \r\n                    date={note.date} \r\n                    handleDeleteNote={handleDeleteNote}\r\n                />\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react';\r\nimport {MdSearch} from 'react-icons/md';\r\n\r\nconst Search = ({ handleSearchNote }) => {\r\n    return <div className=\"search\">\r\n        <MdSearch className=\"search-icons\" size=\"1.3em\" />\r\n        <input onChange={(event)=>handleSearchNote(event.target.value)} type=\"text\" placeholder=\"Search for a note...\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\nconst Header = ({ handleToggleDarkMode }) => {\r\n    const [mode, setMode] = useState(false);\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>Notes</h1>\r\n            <button onClick = {() => {handleToggleDarkMode((previousDarkMode) => !previousDarkMode); setMode(!mode)}}  className=\"save\"> \r\n                {`${mode ? 'Light Mode' : 'Dark Mode'}`}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from \"./components/NotesList\";\nimport Search from './components/Search';\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"Do some holiday shopping.\",\n      date: \"12/10/20XX\"\n    },\n    {\n      id: nanoid(),\n      text: \"Prepare for the celebration.\",\n      date: \"12/17/20XX\"\n    },\n    {\n      id: nanoid(),\n      text: \"Send out the invitations.\",\n      date: \"12/20/20XX\"\n    },\n  ])\n\n  const [searchText, setSearchText] = useState('');\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('notes-data', JSON.stringify(notes))\n  }, [notes])\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  }\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList notes={notes.filter((note) => note.text.toLocaleLowerCase().includes(searchText))}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote} />\n      </div>\n    </div>)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}